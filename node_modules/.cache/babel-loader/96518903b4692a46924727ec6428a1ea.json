{"ast":null,"code":"var _jsxFileName = \"/Users/jamesrobertsjr/GitHub/personal-finance-chatbot-assistant.github.io/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setMessages([...messages, query]);\n    setQuery('');\n    let userInput = query;\n    console.log(userInput); // alert(`Ask me anything! \"${query}\"`);\n    // Here you can handle the query. For example, send it to an API.\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Chat Application\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, messages.map((message, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, message))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    placeholder: \"Type a message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jamesrobertsjr/GitHub/personal-finance-chatbot-assistant.github.io/src/App.js"],"names":["React","useState","App","query","setQuery","messages","setMessages","handleSubmit","event","preventDefault","userInput","console","log","map","message","index","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMM,YAAY,GAAGC,KAAK,IAAI;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,KAAd,CAAD,CAAX;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,QAAIM,SAAS,GAAGP,KAAhB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ,EAL4B,CAM5B;AACA;AACD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QAAQ,CAACQ,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBACZ;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAiB,IAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OADH,CADD,CADH,CAFF,eASE;AAAM,IAAA,QAAQ,EAAEP,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEJ,KAFT;AAGE,IAAA,QAAQ,EAAEa,CAAC,IAAIZ,QAAQ,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAHzB;AAIE,IAAA,WAAW,EAAC,gBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CATF,CADF;AAqBD;;AAED,eAAehB,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setMessages([...messages, query]);\n    setQuery('');\n    let userInput = query;\n    console.log(userInput);\n    // alert(`Ask me anything! \"${query}\"`);\n    // Here you can handle the query. For example, send it to an API.\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Chat Application</h1>\n      <div className=\"chatbox\">\n        {messages.map((message, index) => (\n          <div key={index} className=\"message\">\n            {message}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n          placeholder=\"Type a message\"\n        />\n        <input type=\"submit\" value=\"Send\" />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}