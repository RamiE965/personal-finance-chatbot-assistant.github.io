{"ast":null,"code":"var _jsxFileName = \"/Users/jamesrobertsjr/GitHub/fcc-chatbot-example/src/components/LearningOptions/LearningOptions.jsx\";\nimport React from \"react\";\nimport \"./LearningOptions.css\";\n\nconst LearningOptions = props => {\n  const options = [{\n    text: \"Javascript\",\n    handler: props.actionProvider.handleJavascriptList,\n    id: 1\n  }, {\n    text: \"Data visualization\",\n    handler: () => {},\n    id: 2\n  }, {\n    text: \"APIs\",\n    handler: () => {},\n    id: 3\n  }, {\n    text: \"Security\",\n    handler: () => {},\n    id: 4\n  }, {\n    text: \"Interview prep\",\n    handler: () => {},\n    id: 5\n  }];\n  const optionsMarkup = options.map(option => /*#__PURE__*/React.createElement(\"button\", {\n    className: \"learning-option-button\",\n    key: option.id,\n    onClick: option.handler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, option.text));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"learning-options-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }, optionsMarkup);\n};\n\nexport default LearningOptions;","map":{"version":3,"sources":["/Users/jamesrobertsjr/GitHub/fcc-chatbot-example/src/components/LearningOptions/LearningOptions.jsx"],"names":["React","LearningOptions","props","options","text","handler","actionProvider","handleJavascriptList","id","optionsMarkup","map","option"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,uBAAP;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,OAAO,EAAEH,KAAK,CAACI,cAAN,CAAqBC,oBAFhC;AAGEC,IAAAA,EAAE,EAAE;AAHN,GADc,EAMd;AAAEJ,IAAAA,IAAI,EAAE,oBAAR;AAA8BC,IAAAA,OAAO,EAAE,MAAM,CAAE,CAA/C;AAAiDG,IAAAA,EAAE,EAAE;AAArD,GANc,EAOd;AAAEJ,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,OAAO,EAAE,MAAM,CAAE,CAAjC;AAAmCG,IAAAA,EAAE,EAAE;AAAvC,GAPc,EAQd;AAAEJ,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,OAAO,EAAE,MAAM,CAAE,CAArC;AAAuCG,IAAAA,EAAE,EAAE;AAA3C,GARc,EASd;AAAEJ,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,OAAO,EAAE,MAAM,CAAE,CAA3C;AAA6CG,IAAAA,EAAE,EAAE;AAAjD,GATc,CAAhB;AAYA,QAAMC,aAAa,GAAGN,OAAO,CAACO,GAAR,CAAaC,MAAD,iBAChC;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,GAAG,EAAEA,MAAM,CAACH,EAFd;AAGE,IAAA,OAAO,EAAEG,MAAM,CAACN,OAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGM,MAAM,CAACP,IALV,CADoB,CAAtB;AAUA,sBAAO;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CK,aAA7C,CAAP;AACD,CAxBD;;AA0BA,eAAeR,eAAf","sourcesContent":["import React from \"react\";\n\nimport \"./LearningOptions.css\";\n\nconst LearningOptions = (props) => {\n  const options = [\n    {\n      text: \"Javascript\",\n      handler: props.actionProvider.handleJavascriptList,\n      id: 1,\n    },\n    { text: \"Data visualization\", handler: () => {}, id: 2 },\n    { text: \"APIs\", handler: () => {}, id: 3 },\n    { text: \"Security\", handler: () => {}, id: 4 },\n    { text: \"Interview prep\", handler: () => {}, id: 5 },\n  ];\n\n  const optionsMarkup = options.map((option) => (\n    <button\n      className=\"learning-option-button\"\n      key={option.id}\n      onClick={option.handler}\n    >\n      {option.text}\n    </button>\n  ));\n\n  return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n};\n\nexport default LearningOptions;\n"]},"metadata":{},"sourceType":"module"}